{"version":3,"sources":["constants/actionTypes.js","reducers/postsReducers.js","reducers/authReducers.js","reducers/indexReducers.js","api/index.js","actions/postsActions.js","appStyles.js","components/posts/postsStyles.js","components/posts/post/postStyles.js","components/posts/post/post.js","components/posts/posts.js","components/form/formStyles.js","components/form/form.js","components/navbar/navbarStyles.js","icons/bee.png","components/navbar/navbar.js","components/auth/authStyles.js","components/auth/input.js","components/auth/icon.js","components/auth/auth.js","actions/authActions.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","AUTH","LOGOUT","postActions","posts","action","type","payload","map","post","_id","filter","authReducer","a","state","authData","localStorage","setItem","JSON","stringify","data","clear","combineReducers","auth","API","axios","create","baseURL","fetchPosts","get","createPost","newPost","updatePost","id","updatedPost","patch","deletePost","delete","likePost","signIn","formData","signUp","getPosts","dispatch","api","console","log","reversePosts","reverse","makeStyles","theme","content","display","flexDirection","marginLeft","width","form","line","margin","marginTop","marginBottom","backgroundColor","mainContainer","alignItems","postCard","borderRadius","media","height","paddingLeft","color","button","paddingBottom","paddingRight","Post","setCurrentId","classes","useStyles","useDispatch","Card","className","CardMedia","image","selectedFile","title","creator","moment","createdAt","fromNow","message","tags","tag","Button","style","onClick","likeCount","Posts","useSelector","length","CircularProgress","Container","Grid","root","spacing","paper","padding","flexWrap","justifyContent","fileInput","buttonSubmit","Form","currentId","useState","postData","setPostData","find","useEffect","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","replace","split","multiple","onDone","base64","navBar","textAlign","heading","textDecoration","bee","toolbar","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","Navbar","history","useHistory","location","useLocation","parse","getItem","user","setUser","AppBar","position","component","Link","to","align","src","alt","Toolbar","Avatar","avatar","result","imageUrl","charAt","logout","push","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","item","xs","sm","required","InputProps","endAdornment","InputAdornment","IconButton","icon","viewBox","fill","d","initialState","email","password","confirmPassword","firstName","lastName","Auth","showPassword","setShowPassword","setFormData","isSignup","setIsSignup","googleSuccess","res","profileObj","token","tokenId","error","maxWidth","elevation","signup","signin","container","prevShowPassword","clientId","render","renderProps","disabled","startIcon","onSuccess","onFailure","cookiePolicy","justify","prevIsSignup","hide","hidden","nonHidden","HideContext","React","createContext","FormPost","useContext","FormToggle","setHide","Home","stateHide","Grow","in","Provider","App","maxwidth","path","exact","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.888e2d69.chunk.js","sourcesContent":["// post action constants\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';\r\n\r\n// auth action constants\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';","// reducer for the posts\r\n// import action types\r\nimport { FETCH_ALL, DELETE, UPDATE, CREATE, LIKE } from '../constants/actionTypes';\r\n\r\nconst postActions = (posts = [], action) => {\r\n    switch (action.type) {\r\n        // fetches all posts\r\n        case FETCH_ALL:\r\n            // the payload for FETCH_ALL is all the posts from postsActions\r\n            return action.payload;\r\n        case CREATE:\r\n            // returns array of all existing posts + new post from payload\r\n            return [...posts, action.payload];\r\n        case UPDATE:\r\n        case LIKE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n}\r\n\r\nexport default postActions;","import { AUTH, LOGOUT } from '../constants/actionTypes';\r\n\r\nconst authReducer = async (state = { authData: null }, action) => {\r\n    switch (action.type) {\r\n        case AUTH:\r\n            // keep user signed in\r\n            localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n            return { ...state, authData: action?.data };\r\n        case LOGOUT:\r\n            localStorage.clear();\r\n            return { ...state, authData: null };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","// combines all reducers\r\n// reducer is a function that takes state and action, and if\r\n//  action is equal to a keyword, the code is run\r\n\r\nimport { combineReducers } from 'redux';\r\nimport posts from './postsReducers';\r\nimport auth from './authReducers';\r\n\r\nexport default combineReducers({\r\n    posts,\r\n    auth\r\n});","// Making api calls\r\n\r\n// Allows making http requests to external resources\r\nimport axios from 'axios';\r\n\r\n// url to backend\r\nconst API = axios.create({ baseURL: 'https://bzzt-social-media.herokuapp.com' });\r\n\r\n// Gets all posts in the database\r\nexport const fetchPosts = () => API.get('/posts');\r\n\r\n// Posts the new post into the backend url\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\n\r\n// Updates post and sends to backend url/id\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\n\r\n// Deletes posts\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n\r\n// Likes posts\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\n\r\n// Auth\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);","// import action types\r\nimport { FETCH_ALL, DELETE, UPDATE, CREATE, LIKE } from '../constants/actionTypes';\r\n\r\n// import everything from actions as API\r\nimport * as api from '../api';\r\n\r\n// Action creators, functions that return actions\r\n// Because fetching posts take time, it is async\r\n\r\n// action for grabbing all the posts\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        // try grabbing data (posts)\r\n        const { data } = await api.fetchPosts();\r\n\r\n        // action needs type\r\n        // payload is the property that holds actual data in a redux action object\r\n        const action = { type: FETCH_ALL, payload: data }\r\n\r\n        // dispatching action to the store\r\n        dispatch(action);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (newPost) => async (dispatch) => {\r\n    try {\r\n        // sending post api request to backend server\r\n        const { data } = await api.createPost(newPost);\r\n\r\n        // dispatches action to the store\r\n        dispatch({ type: CREATE, payload: data });\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const reversePosts = (reverse) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n        if (reverse) {\r\n            dispatch({ type: FETCH_ALL, payload: data });\r\n        } else {\r\n            dispatch({ type: FETCH_ALL, payload: data.reverse() });\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, updatedPost) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, updatedPost);\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n        dispatch({ type: LIKE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    posts: {\r\n        marginLeft: '0',\r\n        width: '100%',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n    },\r\n    line: {\r\n        margin: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginBottom: \"30px\",\r\n        backgroundColor: \"black\",\r\n        width: \"90%\",\r\n    },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        alignItems: 'center',\r\n    },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    postCard: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        borderRadius: '15px',\r\n        backgroundColor: \"black\",\r\n    },\r\n    media: {\r\n        width: 0,\r\n        height: 'auto',\r\n        paddingLeft: \"30%\",\r\n    },\r\n    content: {\r\n        paddingLeft: \"5%\",\r\n        backgroundColor: 'black',\r\n        color: '#dac400',\r\n        width: \"100%\",\r\n    },\r\n    line: {\r\n        margin: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginBottom: \"30px\",\r\n        backgroundColor: \"black\",\r\n        width: \"90%\",\r\n    },\r\n    button: {\r\n        paddingBottom: \"175px\",\r\n        paddingRight: \"50px\",\r\n    },\r\n}));","import React from 'react';\r\nimport { Card, CardMedia, Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useStyles from './postStyles';\r\nimport { deletePost, likePost } from '../../../actions/postsActions';\r\n\r\n// receives post from posts.js and adds logic to the data\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.postCard}>\r\n                <CardMedia className={classes.media} image={post.selectedFile} />\r\n                <div className={classes.content}>\r\n                    <h1>{post.title}</h1>\r\n                    <h2>By: {post.creator}</h2>\r\n                    <h5>{moment(post.createdAt).fromNow()}</h5>\r\n                    <h4>{post.message}</h4>\r\n                    <h4>{post.tags.map((tag) => `#${tag} `)}</h4>\r\n                </div>\r\n                <Button style={{color: 'white'}} onClick={() => dispatch(likePost(post._id))} className={classes.button}>Like {post.likeCount}</Button>\r\n                <Button style={{color: 'white'}} onClick={() => setCurrentId(post._id)} className={classes.button}>EDIT</Button>\r\n                <Button style={{color: 'white'}} onClick={() => dispatch(deletePost(post._id))} className={classes.button}>Delete</Button>\r\n            </Card>\r\n            <hr className={classes.line} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Container, CircularProgress, Grid, Button } from '@material-ui/core';\r\nimport useStyles from './postsStyles';\r\nimport { useSelector, useDispatch } from 'react-redux'; // Allows access to the global store\r\n\r\nimport Post from './post/post';\r\nimport { reversePosts } from './../../actions/postsActions';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    // from the store (state), grab posts (.posts)\r\n    // name of the posts is from indexReducers\r\n    const posts = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const buttonOldFirst = () => {\r\n        dispatch(reversePosts(true));\r\n    }\r\n\r\n    const buttonNewFirst = () => {\r\n        dispatch(reversePosts(false));\r\n    }\r\n\r\n    return (\r\n        // if no posts, spinning circle\r\n        // If there are posts, loop through the posts and return\r\n        //   each post separately into post.js\r\n        (posts.length === 0) ? <CircularProgress /> : (\r\n            <Container className={classes.mainContainer}>\r\n                <Button onClick={buttonOldFirst}>Oldest First</Button>\r\n                <Button onClick={buttonNewFirst}>Newest First</Button>\r\n                {posts.map((post) => (  \r\n                    <Grid key={post._id}>\r\n                        <Post post={post} setCurrentId={setCurrentId} />\r\n                    </Grid>\r\n                ))}\r\n            </Container>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      backgroundColor: 'white',\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n    },\r\n    fileInput: {\r\n      width: '97%',\r\n      margin: '10px 0',\r\n    },\r\n    buttonSubmit: {\r\n      marginBottom: 10,\r\n    },\r\n  }));","import React, { useState, useEffect } from 'react';\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport useStyles from './formStyles';\r\nimport { getPosts, createPost, updatePost } from './../../actions/postsActions';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    // postData object\r\n    // postData is current state, and setPostData allows updating the state\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n    // if there is a currentId, then find the post, if not, return null\r\n    const post = useSelector((state) => currentId ? state.posts.find((post) => post._id === currentId) : null);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    // when 'post' changes, run this side effect\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post]);\r\n\r\n    // handler functions\r\n    const handleSubmit = (e) => {\r\n        // prevents browser refreshing\r\n        e.preventDefault();\r\n\r\n        if (currentId) {\r\n            // dispatches the updated post if currentid present\r\n            dispatch(updatePost(currentId, postData));\r\n            dispatch(getPosts());\r\n        } else {\r\n            // dispatches submit action of the data\r\n            dispatch(createPost(postData));\r\n        }\r\n\r\n        clear();\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">Create a Post</Typography>\r\n                <TextField \r\n                    name=\"creator\" \r\n                    variant=\"outlined\" \r\n                    label=\"Creator\" \r\n                    fullWidth \r\n                    // puts the value in the state, in postData\r\n                    value={postData.creator} \r\n                    // ...postData separates the postData so only creator is changed\r\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value})} \r\n                />\r\n                <TextField \r\n                    name=\"title\" \r\n                    variant=\"outlined\" \r\n                    label=\"Title\" \r\n                    fullWidth \r\n                    value={postData.title} \r\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value})} \r\n                />\r\n                <TextField \r\n                    name=\"message\" \r\n                    variant=\"outlined\" \r\n                    label=\"Message\" \r\n                    fullWidth \r\n                    value={postData.message} \r\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value})} \r\n                />\r\n                <TextField \r\n                    name=\"tags\" \r\n                    variant=\"outlined\" \r\n                    label=\"Tags\" \r\n                    fullWidth \r\n                    value={postData.tags} \r\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.replace(/\\s/g, '').split(',')})} \r\n                />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase \r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\r\n                    />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} fullWidth color=\"primary\" variant=\"contained\" type=\"submit\">Submit</Button>\r\n                <Button onClick={clear} fullWidth color=\"secondary\" variant=\"contained\">Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n    navBar: {\r\n        backgroundColor: 'black',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        margin: '40px 0',\r\n        justifyContent: 'center',\r\n        color: 'white',\r\n        borderRadius: '20px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    heading: {\r\n        textDecoration: 'none',\r\n        color: '#dac400',\r\n    },\r\n    bee: {\r\n        borderRadius: '10px',\r\n        marginLeft: '20px',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        width: '40vw',\r\n    },\r\n    profile: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        width: '20vw',\r\n    },\r\n    userName: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    brandContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    purple: {\r\n        color: theme.palette.getContrastText(deepPurple[500]),\r\n        backgroundColor: deepPurple[500],\r\n    },\r\n}));","export default __webpack_public_path__ + \"static/media/bee.4a436364.png\";","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Typography, AppBar, Avatar, Toolbar, Button } from '@material-ui/core';\r\nimport useStyles from './navbarStyles';\r\nimport bee from '../../icons/bee.png';\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    // detecting url change\r\n    const location = useLocation();\r\n\r\n    // grabbing the user\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    // logging out\r\n    const logout = () => {\r\n        dispatch({ type: 'LOGOUT' });\r\n        history.push('/');\r\n        setUser(null);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        // const token = user?.token;\r\n\r\n        // JWT...\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <AppBar className={classes.navBar} position=\"static\">\r\n            <div className={classes.brandContainer}>\r\n                <Typography component={Link} className={classes.heading} to=\"/\" align=\"center\" variant=\"h2\">Bzzt</Typography>\r\n                <img className={classes.bee} src={bee} alt=\"bee\" height=\"60\" width=\"60\" />\r\n            </div>\r\n            <Toolbar className={classes.toolbar}>\r\n                {user ? (\r\n                    <div className={classes.profile}>\r\n                        <Avatar className={classes.avatar} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                        <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>\r\n                        <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n                    </div>\r\n                ) : (\r\n                    <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"default\">Sign In</Button>\r\n                )}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));","import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton} from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => {\r\n    return (\r\n        <Grid item xs={12} sm={half ? 6 : 12}>\r\n            <TextField \r\n                name={name} \r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label={label}\r\n                autoFocus={autoFocus}\r\n                type={type}\r\n                InputProps={name === 'password' ? \r\n                    {endAdornment : (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={handleShowPassword}>\r\n                                {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )} : null}\r\n                \r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst icon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useStyles from './authStyles';\r\nimport Input from './input';\r\nimport Icon from './icon';\r\nimport { signin, signup } from '../../actions/authActions';\r\n\r\nconst initialState = { email: '', password: '', confirmPassword: '', firstName: '', lastName: '' };\r\n\r\nconst Auth = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    // password toggle\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    // sign in form data\r\n    const [formData, setFormData] = useState(initialState);\r\n    // checking if signup or signin\r\n    const [isSignup, setIsSignup] = useState(false);\r\n\r\n    // when pressed submit on form...\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isSignup) {\r\n            dispatch(signup(formData, history));\r\n        } else {\r\n            dispatch(signin(formData, history));\r\n        }\r\n    };\r\n    \r\n    // when input changed...\r\n    const handleChange = (e) => {\r\n        // setting form with name to target value\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n    const switchMode = () => setIsSignup((prevIsSignup) => !prevIsSignup);\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj; // optional chaining operator\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n            // dispatch authentification\r\n            dispatch(({ type: 'AUTH', data: { result, token } }));\r\n\r\n            // redirect back to home\r\n            history.push('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const googleFailure = () => {\r\n        console.log(\"Google sign in failure\");\r\n    };\r\n    \r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignup && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        { isSignup ? 'Sign Up' : 'Sign In' } \r\n                    </Button>\r\n                    <GoogleLogin \r\n                        clientId=\"852955252667-o9jtp23lh5t7u4nfsnrkk36k579clvm7.apps.googleusercontent.com\" \r\n                        render={(renderProps) => (\r\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">Google Sign In</Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy=\"single_host_origin\"\r\n                    />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}>{ isSignup ? 'Already have an account? Sign in' : 'Don\\'t have an account? Sign up'}</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth;","// import action types\r\nimport { AUTH } from '../constants/actionTypes';\r\n\r\n// import everything from actions as API\r\nimport * as api from '../api';\r\n\r\n// Action creators, functions that return actions\r\n// Because fetching posts take time, it is async\r\n\r\n// action for signing in\r\nexport const signin = (formData, history) => async (dispatch) => {\r\n    try {\r\n        // log in the user\r\n        const { data } = await api.signIn(formData);\r\n\r\n        dispatch({ type: AUTH, data });\r\n\r\n        history.push('/');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// action for signing up\r\nexport const signup = (formData, history) => async (dispatch) => {\r\n    try {\r\n        // signing up user\r\n        const { data } = await api.signUp(formData);\r\n\r\n        dispatch({ type: AUTH, data });\r\n\r\n        history.push('/');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Container, Grow, Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport { getPosts } from './actions/postsActions';\r\nimport useStyles from './appStyles.js';\r\n\r\nimport Posts from './components/posts/posts';\r\nimport Form from './components/form/form';\r\nimport Navbar from './components/navbar/navbar';\r\nimport Auth from './components/auth/auth';\r\nimport './index.css';\r\n\r\nconst hide = {\r\n    hidden: {\r\n        display: \"none\"\r\n    },\r\n    nonHidden: {\r\n        display: \"block\"\r\n    },\r\n}\r\n\r\nconst HideContext = React.createContext(hide.hidden);\r\n\r\nconst FormPost = () => {\r\n    const { hide } = React.useContext(HideContext);\r\n    // brings in currentId from state in App as both form and posts use it\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect lets you preform side effects in function components\r\n    useEffect(() => {\r\n        // dispatches the action for getting posts, goes to reducer logic\r\n        dispatch(getPosts());\r\n        // when currentId changed (cleared in form), dispatches getPosts()\r\n    }, [currentId, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <FormToggle />\r\n            </Container>\r\n            <Container className={classes.form} style={{display: hide.display}}>\r\n                <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n            </Container>\r\n            <hr className={classes.line} />\r\n            <Container className={classes.posts}>\r\n                <Posts setCurrentId={setCurrentId} />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormToggle = () => {\r\n    const { setHide } = React.useContext(HideContext);\r\n\r\n    const hideButton = () => {\r\n        setHide(\"hidden\")\r\n    }\r\n\r\n    const unHideButton = () => {\r\n        setHide(\"nonHidden\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={hideButton}>Hide Form</Button>\r\n            <Button onClick={unHideButton}>Show Form</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [stateHide, setHide] = React.useState(\"hidden\");\r\n\r\n    return (\r\n        <Grow in>\r\n            <Container className={classes.content}>\r\n                <HideContext.Provider value={{ hide: hide[stateHide], setHide }}>\r\n                    <FormPost />\r\n                </HideContext.Provider>\r\n            </Container>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Container maxwidth=\"lg\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/auth\" exact component={Auth} />\r\n                </Switch>\r\n            </Container>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","// Connecting react application to index.html file\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// initializing redux\r\n// Keeps store and allows access to the store from anywhere in the app\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers/indexReducers';\r\n\r\nimport App from './App';\r\n\r\n// createStore creates a redux store that holds the complete state tree of you app\r\n// compose composes functions\r\n// applyMiddleware applies middleware (thunk in this case)\r\n// Middleware allows you to wrap the store's dispatch function\r\n// thunk is a middleware that allows you to return functions rather than\r\n//   just actions\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\n// Connecting to the div with the id of root\r\nReactDOM.render(\r\n    // Makes redux store available to App\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}